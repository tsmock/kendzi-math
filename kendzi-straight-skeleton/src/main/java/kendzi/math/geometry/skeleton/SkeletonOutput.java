package kendzi.math.geometry.skeleton;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.IdentityHashMap;
import java.util.List;
import java.util.Map;

import javax.vecmath.Point2d;

import kendzi.math.geometry.line.LineSegment2d;
import kendzi.math.geometry.polygon.PolygonList2d;

/**
 * Output of Skeleton algorithm.
 *
 * @author Tomasz KÄ™dziora (Kendzi)
 */
public class SkeletonOutput {

    /**
     * Edges of polygon.
     */
    @Deprecated private Map<PolygonList2d, LineSegment2d> edges = new HashMap<PolygonList2d, LineSegment2d>();

    /**
     * Result of skeleton algorithm for edge.
     */
    private List<EdgeOutput> edgeOutputs;

    /**
     * Faces generated by Skeleton algorithm.
     */
    @Deprecated private List<PolygonList2d> faces = new ArrayList<PolygonList2d>();

    /**
     * Distance points from edges.
     */
    private Map<Point2d, Double> distance = new IdentityHashMap<Point2d, Double>();

    /**
     * @return the edges
     */
    public Map<PolygonList2d, LineSegment2d> getEdges() {
        return edges;
    }

    /**
     * @param edges
     *            the edges to set
     */
    public void setEdges(Map<PolygonList2d, LineSegment2d> edges) {
        this.edges = edges;
    }

    /**
     * @return the faces
     */
    public List<PolygonList2d> getFaces() {
        return faces;
    }

    /**
     * @param faces
     *            the faces to set
     */
    public void setFaces(List<PolygonList2d> faces) {
        this.faces = faces;
    }

    /**
     * @return the distance
     */
    public Map<Point2d, Double> getDistance() {
        return distance;
    }

    /**
     * @param distance
     *            the distance to set
     */
    public void setDistance(Map<Point2d, Double> distance) {
        this.distance = distance;
    }

    public List<EdgeOutput> getEdgeOutputs() {
        return edgeOutputs;
    }

    public void setEdgeOutputs(List<EdgeOutput> edgeOutputs) {
        this.edgeOutputs = edgeOutputs;
    }

}